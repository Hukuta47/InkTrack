//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InkTrack_Report.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LitDBEntities : DbContext
    {
        public LitDBEntities()
            : base("name=LitDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cabinet> Cabinet { get; set; }
        public virtual DbSet<Cartridge> Cartridge { get; set; }
        public virtual DbSet<CartridgeModel> CartridgeModel { get; set; }
        public virtual DbSet<CartridgeReplacement_Log> CartridgeReplacement_Log { get; set; }
        public virtual DbSet<CartridgeStatus> CartridgeStatus { get; set; }
        public virtual DbSet<Device> Device { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<EmployeeLIT> EmployeeLIT { get; set; }
        public virtual DbSet<Printer> Printer { get; set; }
        public virtual DbSet<ReasonForReplacement> ReasonForReplacement { get; set; }
        public virtual DbSet<CabinetDevicesEmployees> CabinetDevicesEmployees { get; set; }
    
        public virtual ObjectResult<GetCabinetsWithPrinters_Result> GetCabinetsWithPrinters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCabinetsWithPrinters_Result>("GetCabinetsWithPrinters");
        }
    
        public virtual ObjectResult<GetCompatibleCartridgesForPrinter_Result> GetCompatibleCartridgesForPrinter(Nullable<int> printerID)
        {
            var printerIDParameter = printerID.HasValue ?
                new ObjectParameter("PrinterID", printerID) :
                new ObjectParameter("PrinterID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompatibleCartridgesForPrinter_Result>("GetCompatibleCartridgesForPrinter", printerIDParameter);
        }
    
        public virtual ObjectResult<GetCompatibleCartridgesInStockForPrinter_Result> GetCompatibleCartridgesInStockForPrinter(Nullable<int> printerID)
        {
            var printerIDParameter = printerID.HasValue ?
                new ObjectParameter("PrinterID", printerID) :
                new ObjectParameter("PrinterID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompatibleCartridgesInStockForPrinter_Result>("GetCompatibleCartridgesInStockForPrinter", printerIDParameter);
        }
    
        public virtual ObjectResult<GetEmployeesInCabinet_Result> GetEmployeesInCabinet(Nullable<int> cabinetID)
        {
            var cabinetIDParameter = cabinetID.HasValue ?
                new ObjectParameter("CabinetID", cabinetID) :
                new ObjectParameter("CabinetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmployeesInCabinet_Result>("GetEmployeesInCabinet", cabinetIDParameter);
        }
    
        public virtual ObjectResult<GetPrintersInCabinet_Result> GetPrintersInCabinet(Nullable<int> cabinetID)
        {
            var cabinetIDParameter = cabinetID.HasValue ?
                new ObjectParameter("CabinetID", cabinetID) :
                new ObjectParameter("CabinetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPrintersInCabinet_Result>("GetPrintersInCabinet", cabinetIDParameter);
        }
    
        public virtual int InstallCartridgeToPrinter(Nullable<int> newCartridgeID, Nullable<int> reasonID, Nullable<int> employeeLITID, string comment)
        {
            var newCartridgeIDParameter = newCartridgeID.HasValue ?
                new ObjectParameter("NewCartridgeID", newCartridgeID) :
                new ObjectParameter("NewCartridgeID", typeof(int));
    
            var reasonIDParameter = reasonID.HasValue ?
                new ObjectParameter("ReasonID", reasonID) :
                new ObjectParameter("ReasonID", typeof(int));
    
            var employeeLITIDParameter = employeeLITID.HasValue ?
                new ObjectParameter("EmployeeLITID", employeeLITID) :
                new ObjectParameter("EmployeeLITID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InstallCartridgeToPrinter", newCartridgeIDParameter, reasonIDParameter, employeeLITIDParameter, commentParameter);
        }
    }
}
